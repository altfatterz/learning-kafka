apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
spec:
  kafka:
    version: 3.3.1
    replicas: 1
    authorization:
      type: simple
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: oauth
#          tlsTrustedCertificates:
#            secretName: <keycloak-oauth-secret>
#            certificate: <keycloak-certificate>
          clientId: kafka-broker
          clientSecret:
            key: secret
            secretName: broker-oauth-secret
          # By default, issuer is checked using the value configured by validIssuerUri
          validIssuerUri: http://keycloak-keycloakx-http/auth/realms/kafka
          # Use fast local JWT token validation
          # jwksEndpointUri: http://keycloak-keycloakx-http/auth/realms/kafka/protocol/openid-connect/certs
          # OAuth 2.0 introspection endpoint configuration
          introspectionEndpointUri: http://keycloak-keycloakx-http/auth/realms/kafka/protocol/openid-connect/token/introspect
          # for Kafka ACL authorization we need to identify the user by their username during authentication
          userNameClaim: preferred_username
          # Session re-authentication: https://strimzi.io/docs/operators/latest/full/configuring.html#str
          maxSecondsWithoutReauthentication: 3600
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      min.insync.replicas: 1
    storage:
      type: ephemeral
    logging:
      type: inline
      loggers:
        log4j.logger.io.strimzi: "TRACE"
        log4j.logger.org.apache.kafka: "DEBUG"
  zookeeper:
    replicas: 1
    storage:
      type: ephemeral
  entityOperator:
    topicOperator: {}
    userOperator: {}
